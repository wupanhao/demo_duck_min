<?xml version="1.0" encoding="utf-8"?>
<launch>
	<!-- start basic args -->
	<arg name="veh" default="duckiebot"/>
	<arg name="config" default="baseline" />
	<arg name="param_file_name" default="default" />
	<arg name="apriltags_param_file_name" default="$(arg param_file_name)" />
	<arg name="fsm_file_name" default="default" />
	<arg name="visualization" default="true" />
	<arg name="verbose" default="false" />
	<arg name="statistics" default="false"/>
	<arg name="map_name" default="autolab_tiles_map"/>
	<arg name="anti_instagram" default="true"/>
	<arg name="ai_trafo_mode" default="cb" doc="'cb' for colo balance only; 'both' for color balance and linear trafo"/>
	<arg name="ai_interval" default="5" doc="interval with which the linear trafo gets updated. color balance is performed every second."/>
	<arg name="loc" default="-1"/>
	<arg name="line_detector_param_file_name" default="$(arg param_file_name)"/>
	<arg name="intersectionType" default= "stopSign"/>
	<arg name="use_priority_protocol" default= "true"/>
	<arg name="target_node" default="240"/>
	<!-- end basic args -->

	<!-- the things that are "on" by default:
	- camera stack (raw imagery defaults to false)
	- wheels stack
	- joystick stack
	- lane_following stack (old version of line detector only)
	- fsm
-->

<!-- general convention on remappings is that we remap the "subscribers" -->

<arg name="wheels" default="true"/>

<arg name="joystick" default="true"/>

<arg name="odometry" default="false"/>
<arg name="/odometry/forward_kinematics" default="false"/>

<arg name="lane_following" default="true"/>
<arg name="/lane_following/line_detection" default="true"/>
<arg name="/lane_following/ground_projection" default="true"/>
<arg name="/lane_following/lane_filter" default="true"/>
<arg name="/lane_following/stop_line_filter" default="false"/>
<arg name="/lane_following/lane_controller" default="true"/>

<arg name="fsm" default="true"/>
<arg name="logic_gate_node" default="true"/>

<arg name="vehicle_avoidance" default="true"/>
<arg name="/vehicle_avoidance/detection" default="true" />
<arg name="/vehicle_avoidance/multivehicle_detection" default="false" />
<arg name="/vehicle_avoidance/filter" default="true" />
<arg name="/vehicle_avoidance/control" default="true"/>

<!-- end switch args -->

<!-- Enable statistics -->
<param name="enable_statistics" value="$(arg statistics)"/>


<!-- Start Wheels -->
<group if="$(arg wheels)">

	<remap from="inverse_kinematics_node/wheels_cmd" to="wheels_driver_node/wheels_cmd" />
	<remap from="inverse_kinematics_node/car_cmd" to="car_cmd_switch_node/cmd"/>
	<remap from="inverse_kinematics_node/actuator_limits_received" to="lane_controller_node/actuator_limits_received" />
	<remap from="wheels_driver_node/radius_limit" to="lane_controller_node/radius_limit" />
	<include file="$(find dagu_car)/launch/inverse_kinematics_node.launch">
		<arg name="veh" value="$(arg veh)"/>
	</include>

	<!-- Wheel Driver -->
	<include file="$(find dagu_car)/launch/wheels_driver_node.launch">
		<arg name="veh" value="$(arg veh)"/>
	</include>


</group>

<!-- End Wheels -->

<group if="$(arg odometry)">
	<group if="$(arg /odometry/forward_kinematics)">
		<remap from="forward_kinematics_node/wheels_cmd" to="wheels_driver_node/wheels_cmd_executed" />
		<include file="$(find dagu_car)/launch/forward_kinematics_node.launch">
			<arg name="veh" value="$(arg veh)"/>
			<arg name="config" value="$(arg config)"/>
		</include>
		<!-- run the velocity_to_pose_node -->
		<remap from="velocity_to_pose_node/velocity" to="forward_kinematics_node/velocity" />
		<include file="$(find dagu_car)/launch/velocity_to_pose_node.launch">
			<arg name="veh" value="$(arg veh)"/>
			<arg name="config" value="$(arg config)"/>
		</include>
	</group>
</group>


<!-- Start Joystick -->
<group if="$(arg joystick)">
	<!-- joy -->
	<include file="$(find joy_mapper)/launch/joy_node.launch">
		<arg name="veh" value="$(arg veh)"/>
		<arg name="config" value="$(arg config)"/>
		<arg name="param_file_name" value="$(arg param_file_name)"/>
	</include>

	<!-- joy_mapper -->
	<include file="$(find joy_mapper)/launch/joy_mapper_node.launch">
		<arg name="veh" value="$(arg veh)"/>
		<arg name="config" value="$(arg config)"/>
		<arg name="param_file_name" value="$(arg param_file_name)"/>
	</include>
</group>
<!-- End Joystick -->

<!-- Start FSM -->
<group if="$(arg fsm)">
	<!-- FSM -->
	<!-- no remapping for FSM - full topic names specified in params yaml -->
	<include file="$(find fsm)/launch/fsm_node.launch">
		<arg name="veh" value="$(arg veh)"/>
		<arg name="config" value="$(arg config)"/>
		<arg name="param_file_name" value="$(arg fsm_file_name)"/>
	</include>

	<!-- car_cmd_switch_node -->
	<!-- no remappings for car_cmd_switch - full topic names specified in params yaml -->
	<remap from="car_cmd_switch_node/cmd_lane_following" to="lane_controller_node/lane_control"/>
	<group unless="$(arg vehicle_avoidance)">
			<remap from="vehicle_avoidance_control_node/car_cmd" to="lane_controller_node/car_cmd" />
	</group>

	<!-- need either lots more of these or none of these -->
	<include file="$(find dagu_car)/launch/car_cmd_switch_node.launch">
		<arg name="veh" value="$(arg veh)"/>
		<arg name="config" value="$(arg config)"/>
		<arg name="param_file_name" value="$(arg param_file_name)"/>
	</include>

 <!-- <remap from="implicit_coordination_node/intersection_go" to="logic_gate_node/implicit_intersection_go" />
 <remap from="coordinator_node/intersection_go" to="logic_gate_node/explicit_intersection_go" /> -->
	<group if="$(arg logic_gate_node)">
		<include file="$(find fsm)/launch/logic_gate_node.launch">
			<arg name="veh" value="$(arg veh)"/>
			<arg name="config" value="$(arg config)"/>
			<arg name="param_file_name" value="$(arg param_file_name)"/>
		</include>
	</group>
</group>

<!--End FSM -->

<!-- Start Lane Following -->
<group if="$(arg lane_following)">

	<group >
		<include file="$(find lane_detector)/launch/lane_detector_node.launch">
		</include>
	</group>

	<!-- Lane controller -->
	<group if="$(arg /lane_following/lane_controller)">
		<remap from="lane_controller_node/lane_pose" to="lane_filter_node/lane_pose"/>
		<!--NO!!! <remap from="fsm_node/mode" to="fsm_node/lane_pose_intersection_navigation"/> --><!--TODO what is this -->
		<!-- <remap from="lane_controller_node/lane_pose_obstacle_avoidance" to="lane_filter_node/lane_pose_obstacle_avoidance"/> TODO: add correct node_name
		<remap from="lane_controller_node/lane_pose_parking" to="lane_filter_node/lane_pose_parking"/>
		<remap from="lane_controller_node/implicit_coordination_velocity" to="lane_filter_node/implicit_coordination_velocity"/> -->
		<remap from="lane_controller_node/wheels_cmd_executed" to="wheels_driver_node/wheels_cmd_executed" />
		<remap from="lane_controller_node/fsm_mode" to="fsm_node/mode" />
		<remap from="lane_controller_node/actuator_limits" to="inverse_kinematics_node/actuator_limits" />
		<remap from="lane_controller_node/obstacle_avoidance_pose" to="obst_avoid/obstacle_avoidance_pose" />
		<remap from="lane_controller_node/obstacle_detected" to="obstacle_avoidance_node/obstacle_avoidance_active_flag" />
		<remap from="lane_controller_node/stop_line_reading" to="stop_line_filter_node/stop_line_reading" />

		<include file="$(find lane_control)/launch/lane_controller_node.launch">
			<arg name="veh" value="$(arg veh)"/>
			<arg name="config" value="$(arg config)"/>
			<arg name="param_file_name" value="$(arg param_file_name)"/>
		</include>
	</group>

</group>
<!-- End Lane Control -->


<!-- Start Vehicle Avoidance -->
<group if="$(arg vehicle_avoidance)">

	<!-- Vehicle Control Node -->
	<group if="$(arg /vehicle_avoidance/control)">
		<remap from="vehicle_avoidance_control_node/detection" to="vehicle_detection_node/detection"/>
		<remap from="vehicle_avoidance_control_node/vehicle_pose" to="vehicle_filter_node/pose"/>
		<remap from="vehicle_avoidance_control_node/car_cmd_in" to="lane_controller_node/car_cmd"/>
		<include file="$(find vehicle_detection)/launch/vehicle_avoidance_control_node_apriltag.launch" >


			<arg name="veh" value="$(arg veh)"/>
		</include>
	</group>
</group>
<!-- End Vehicle Avoidance -->

</launch>
