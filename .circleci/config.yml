version: 2
jobs:
    build:
     docker:
        - image: andreacensi/duckietown-xenial-kinetic:19
          environment:
              DUCKIEFLEET_ROOT: /root/duckiefleet
              DUCKIETOWN_ROOT: /root/project
              DUCKIETOWN_DATA: /root/duckietown-data

              COLUMNS: 160
     parallelism: 4
     resource_class: large
     steps:
        - checkout

        - run:
            name: deps
            command: |
                # python -m venv venv
                #
                # . venv/bin/activate
                export READTHEDOCS=True # needed to make Picamera install
                pip install --upgrade -r requirements.txt

                make python-module-stats


        - run:
            name: build
            command: |

                source /opt/ros/kinetic/setup.bash

                echo PWD = $PWD
                mkdir -p $DUCKIETOWN_DATA
                mkdir -p $DUCKIEFLEET_ROOT

                export ROS_LANG_DISABLE=gennodejs:geneus:genlisp
                make build-catkin-parallel-max


                source environment.sh
                # make build-machines

                make python-module-stats

        - run:
            name: make continuous-integration-tests
            command: |
                source /opt/ros/kinetic/setup.bash
                source $PWD/catkin_ws/devel/setup.bash

                export HOSTNAME=$HOSTNAME

                # git clone git@github.com:duckietown/duckiefleet-fall2017.git $DUCKIEFLEET_ROOT
                mkdir -p $DUCKIEFLEET_ROOT

                make test-download-logs
                make test-circle


        - run:
            name: junit
            when: always
            command: |

                make test-comptests-collect-junit

                # export artifacts=artifacts
                # export reports=reports
                # mkdir -p $artifacts
                # mkdir -p $reports
                # .circleci/collect-test-artifacts.sh $artifacts $reports


        - run:
             name: what the duck
             command:
                 "source /opt/ros/kinetic/setup.bash && source $PWD/catkin_ws/devel/setup.bash && ./what-the-duck || :"


        - test-results-store:
                path: out/comptests/junit

        - store_artifacts:
              path: artifacts
              destination: artifacts

        # - store_artifacts:
        #       path: anti_instagram_annotations_test
        #       destination: anti_instagram_annotations_test

        - store_artifacts:
              path: reports
              destination: reports

        - run:
            when: always
            command: |
                ./misc/generate-other-reports.sh

        - store_artifacts:
              path: out
              destination: out
